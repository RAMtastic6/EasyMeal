name: Code Coverage

on: 
  push:
    branches:
      - 'develop'

jobs:
  backend-test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: nest-js

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with: 
          node-version: 21

      - name: Install NPM dependencies
        run: npm ci
          
      - name: Run tests
        run: npm run test:cov

      - name: Install Coveralls
        run: |
          curl -L https://coveralls.io/coveralls-linux.tar.gz | tar -xz -C /usr/local/bin
          chmod +x /usr/local/bin/coveralls
          coveralls --version

      - name: Send coverage to Coveralls
        run: coveralls report ./coverage/lcov.info -r ${{ secrets.COVERALLS_REPO_TOKEN }} --job-flag backend

      - name: Convert coverage to MD
        id: coverage
        run: |
          echo 'MD_REPORT<<EOF' >> $GITHUB_OUTPUT
          echo "### Backend Code Coverage" >> $GITHUB_OUTPUT
          cat "./coverage/coverage.txt" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      
      - name: Add coverage report to the PR
        uses: mshick/add-pr-comment@v2
        with:
          message: ${{ steps.coverage.outputs.MD_REPORT }}

      - name: Add coverage report to the job summary
        run: |
          echo "${{ steps.coverage.outputs.MD_REPORT }}" >> $GITHUB_STEP_SUMMARY

  frontend-test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: next-js

    steps:

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with: 
          node-version: 21

      - name:  Install NPM dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:cov

      - name: Install Coveralls
        run: |
          curl -L https://coveralls.io/coveralls-linux.tar.gz | tar -xz -C /usr/local/bin
          chmod +x /usr/local/bin/coveralls
          coveralls --version

      - name: Send coverage to Coveralls
        run: coveralls report ./coverage/lcov.info -r ${{ secrets.COVERALLS_REPO_TOKEN }} --job-flag frontend

      - name: Convert coverage to MD
        id: coverage
        run: |
          echo 'MD_REPORT<<EOF' >> $GITHUB_OUTPUT
          echo "### Frontend Code Coverage" >> $GITHUB_OUTPUT
          cat "./coverage/coverage.txt" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      
      - name: Add coverage report to the PR
        uses: mshick/add-pr-comment@v2
        with:
          message: ${{ steps.coverage.outputs.MD_REPORT }}

      - name: Add coverage report to the job summary
        run: |
          echo "${{ steps.coverage.outputs.MD_REPORT }}" >> $GITHUB_STEP_SUMMARY

  websocket-test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        working-directory: websocket-server
          
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v3
        with: 
          node-version: 21

      - name: Install NPM dependencies
        run: npm ci
          
      - name: Run tests
        run: npm run test:cov

      - name: Install Coveralls
        run: |
          curl -L https://coveralls.io/coveralls-linux.tar.gz | tar -xz -C /usr/local/bin
          chmod +x /usr/local/bin/coveralls
          coveralls --version

      - name: Send coverage to Coveralls
        run: coveralls report ./coverage/lcov.info -r ${{ secrets.COVERALLS_REPO_TOKEN }} --job-flag websocket

      - name: Convert coverage to MD
        id: coverage
        run: |
          echo 'MD_REPORT<<EOF' >> $GITHUB_OUTPUT
          echo "### Websocket Code Coverage" >> $GITHUB_OUTPUT
          cat "./coverage/coverage.txt" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      
      - name: Add coverage report to the PR
        uses: mshick/add-pr-comment@v2
        with:
          message: ${{ steps.coverage.outputs.MD_REPORT }}

      - name: Add coverage report to the job summary
        run: |
          echo "${{ steps.coverage.outputs.MD_REPORT }}" >> $GITHUB_STEP_SUMMARY

  finalize:
    needs: [backend-test, frontend-test, websocket-test]
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coveralls
        run: coveralls done -r ${{ secrets.COVERALLS_REPO_TOKEN }}
